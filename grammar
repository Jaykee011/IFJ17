PROGRAM -> FUNCTIONS SCOPE eof

FUNCTIONS -> FUNCTION FUNCTIONS
FUNCTIONS -> EPSILON

FUNCTION -> Declare Function id lb PARAMS rb As TYPE eol
FUNCTION -> Function id lb PARAMS rb As TYPE eol BODY End Function

PARAMS ->  PARAM NPARAM
PARAMS ->  EPSILON 

NPARAM -> comma PARAM NPARAM
NPARAM -> EPSILON

PARAM -> id As TYPE

SCOPE -> Scope eol COMMANDS End Scope

BODY -> Return EXPR eol BODY
BODY -> COMMANDS

COMMANDS -> COMMAND COMMANDS
COMMANDS -> EPSILON

COMMAND -> CCOMMAND
COMMAND -> VARDEF eol

CCOMMANDS -> CCOMMAND
CCOMMANDS -> EPSILON

CCOMMAND -> ASSIGNMENT eol
CCOMMAND -> INPUT eol
CCOMMAND -> PRINT eol
CCOMMAND -> BRANCH eol
CCOMMAND -> LOOP EOF

VARDEF -> Dim id As TYPE
VARDEF -> Dim id As TYPE equals EXPR

ASSIGNMENT -> id equals EXPR
ASSIGNMENT -> id equals FCALL

FCALL -> id lb CPARAMS rb

CPARAMS -> CPARAM NCPARAM
CPARAMS -> EPSILON

NCPARAM -> , CPARAM NCPARAM
NCPARAM -> EPSILON 

CPARAM -> TERM

INPUT -> Input id

PRINT -> EXPR; NEXPR

NEXPR -> EXPR; NEXPR
NEXPR -> EPSILON

BRANCH -> If EXPR Then eol CCOMMANDS Else eol CCOMMANDS End If

LOOP -> Do While EXPR eol CCOMMANDS Loop

TYPE -> Integer
TYPE -> Double
TYPE -> String

TERM -> literal
TERM -> id

EXPR -> TERM
EXPR -> EXPR plus EXPR
EXPR -> EXPR minus EXPR
EXPR -> EXPR times EXPR
EXPR -> EXPR div EXPR
EXPR -> EXPR gt EXPR
EXPR -> EXPR lt EXPR
EXPR -> EXPR gte EXPR
EXPR -> EXPR lte EXPR
EXPR -> EXPR idiv EXPR
EXPR -> EXPR equals EXPR
EXPR -> EXPR neq EXPR
EXPR -> lb EXPR rb